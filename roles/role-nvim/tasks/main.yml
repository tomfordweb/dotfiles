---
# tasks file for roles/role-nvim
- name: install nvim deps (arch)
  become: yes
  when: ansible_facts['distribution'] == 'Archlinux'
  community.general.pacman:
    name:
      - neovim
      - tmux
      - ripgrep
    state: present

- name: install nvim deps (mac)
  when: ansible_distribution == 'MacOSX'
  community.general.homebrew:
    name:
      - neovim
      - tmux
      - ripgrep
    state: present

- name: Install nvm for intellisense server
  shell: >
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
  args:
    creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

- name: Install vimplug for nvim
  shell: >
    sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
     https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/nvim/site/autoload/plug.vim"

- name: Create nvim config directory
  file:
    path: "{{ ansible_env.HOME }}/.config/nvim"
    state: directory

- name: Move coc init config to nvim folder
  copy:
    src: coc-init.vim
    dest: "{{ ansible_env.HOME }}/.config/nvim/coc-init.vim"
    mode: 0640

- name: Move coc settings to nvim folder
  copy:
    src: coc-settings.json
    dest: "{{ ansible_env.HOME }}/.config/nvim/coc-settings.json"
    mode: 0640

- name: Move nvim settings to nvim folder
  tags: ["vimrc"]
  copy:
    src: init.vim
    dest: "{{ ansible_env.HOME }}/.config/nvim/init.vim"
    mode: 0640
