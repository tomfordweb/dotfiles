---
# tasks file for role-shell
- name: Install Alacritty arch
  become: yes
  when: ansible_facts['distribution'] == 'Archlinux'
  tags: ['terminal']
  community.general.pacman:
    name:
      - alacritty
    state: present

# Update homebrew and upgrade all packages
- name: Update homebrew and upgrade packages
  when: ansible_facts['distribution'] == 'MacOSX'
  community.general.homebrew:
    update_homebrew: yes
    upgrade_all: yes

- name: Install Alacritty osx
  when: ansible_facts['distribution'] == 'MacOSX'
  tags: ['terminal']
  community.general.homebrew_cask:
    name:
      - alacritty
    state: present

- name: Alacritty config
  tags: ['terminal', 'dotfiles']
  copy:
    src: alacritty.yml
    dest: '{{ ansible_env.HOME }}/.alacritty.yml'

- name: Get the user shell
  ansible.builtin.debug:
    var: ansible_facts['user_shell']

- name: ensure bash profile exists
  copy:
    content: ''
    dest: '{{ ansible_env.HOME }}/.bash_profile'
    force: no
    mode: 0755

- name: Source shell functions file in bash_profile
  when: ansible_facts['user_shell'] == '/bin/bash'
  ansible.builtin.lineinfile:
    dest: '{{ ansible_env.HOME }}/.bash_profile'
    regexp: 'source %HOME/.shell_functions'
    line: 'if [ -f $HOME/.shell_functions ]; then . $HOME/.shell_functions; fi'

- name: Source shell functions file in zshrc
  when: ansible_facts['user_shell'] == '/bin/zsh'
  ansible.builtin.lineinfile:
    dest: '{{ ansible_env.HOME }}/.zshrc'
    regexp: 'source %HOME/.shell_functions'
    line: 'if [ -f $HOME/.shell_functions ]; then . $HOME/.shell_functions; fi'

- name: Copy shell functions file to home directory
  copy:
    src: shell_functions
    dest: '{{ ansible_env.HOME }}/.shell_functions'
